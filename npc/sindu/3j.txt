//=========================================================
// ____                    __           ____    _____      
///\  _`\   __            /\ \         /\  _`\ /\  __`\    
//\ \,\L\_\/\_\    ___    \_\ \  __  __\ \ \L\ \ \ \/\ \   
// \/_\__ \\/\ \ /' _ `\  /'_` \/\ \/\ \\ \ ,  /\ \ \ \ \  
//   /\ \L\ \ \ \/\ \/\ \/\ \L\ \ \ \_\ \\ \ \\ \\ \ \_\ \ 
//   \ `\____\ \_\ \_\ \_\ \___,_\ \____/ \ \_\ \_\ \_____\
//    \/_____/\/_/\/_/\/_/\/__,_ /\/___/   \/_/\/ /\/_____/
//=========================================================
// SrLuis ~ Minato
//=========================================================

prontera.gat,147,186,5	script	Job Master	430,{
	mes "^ff0000[Job Master]^000000";
	if (class == 23) goto EXTENDED_1;//SUPER NOVICE
	if (class == 25) goto aceptado_n;//ninja
	if(Class >= 4054 && Class <= 4085) goto L_max;
	if(SkillPoint != 0) goto L_stats;
	if(Upper == 1 && Class >= Job_Lord_Knight && Class <= Job_Paladin2) goto L_Third;
	if(JobLevel < 10) goto L_LvError;
		switch(Class){
		case Job_Novice_High:
		case Job_Baby:
		case Job_Novice:
			skill 142,1,0;
			skill 143,1,0;
			mes "Bienvenido, por favor selecciona el Job al que desea cambiar";
			if(lastJob != 0 && Class == Job_Novice_High){
				switch(lastJob){
					case Job_Knight:
					case Job_Crusader:
						set @target_job, Job_Swordman_High;
						break;
					case Job_Monk:
					case Job_Priest:
						set @target_job, Job_Acolyte_High;
						break;
					case Job_Alchemist:
					case Job_Blacksmith:
						set @target_job, Job_Merchant_High;
						break;
					case Job_Rogue:
					case Job_Assassin:
						set @target_job, Job_Thief_High;
						break;
					case Job_Wizard:
					case Job_Sage:
						set @target_job, Job_Mage_High;
						break;
					case Job_Hunter:
					case Job_Bard:
					case Job_Dancer:
						set @target_job, Job_Archer_High;
						break;
							}
			} else {
				switch(select("Swordsman","Mage","Archer","Acolyte","Merchant","Thief",
					"Super Novice","Taekwon","Gunslinger","Ninja")){
						case 7:
							if(Class == Job_Novice_High) goto L_noReq;
							if($@JC_SupNovM > BaseLevel) goto L_BvError;
							if(Upper == 2)
								set @target_job, Job_Super_Baby;
							else
								set @target_job, Job_SuperNovice;
							break;
						case 8:
							if(Class == Job_Novice_High) goto L_noReq;
							if(Upper == 2) goto L_noReq;
							set @target_job, Job_Taekwon;
							break;
						case 9:
						case 10:
							if(Class == Job_Novice_High || Upper == 2) goto L_noReq;
							set @target_job, @menu + 15;
							break;
						default:
							set @target_job, @menu;
							if(Class == Job_Novice_High) set @target_job, @target_job + 4001;
							break;
					}
			}
			mes "¿Estás seguro de que desea cambiar a" + JobName(@target_job) + "?";
			if(select("No","Yes") == 2){
				callfunc "Job_Change", @target_job;
				if(@target_job == Job_Gunslinger || @target_job == Job_Ninja || @target_job == Job_Taekwon) {
					callfunc "F_ClearJobVar";
				} else {
					if($@JC_Plat) goto L_GivePlat;
				}
			}
			close;
			break;
		default:
			if(JobLevel < $@JC_MinimumJB) goto L_LvError;
			deletearray @job_opt, getarraysize(@job_opt);
			if(Class < Job_Knight || Class == Job_Taekwon || (Class > Job_Baby && Class < Job_Baby_Knight) || (Class > Job_Novice_High && Class < Job_Lord_Knight)){
				if(lastJob != 0){
					set @target_job, lastJob + 4001;
				} else {
					switch(Class){
						case Job_Swordman_High:
						case Job_Baby_Swordman:
						case Job_Swordman:
							set @job_opt[0], Job_Knight;
							set @job_opt[1], Job_Crusader;
							break;
						case Job_Mage_High:
						case Job_Baby_Mage:
						case Job_Mage:
							set @job_opt[0], Job_Wizard;
							set @job_opt[1], Job_Sage;
							break;
						case Job_Archer_High:
						case Job_Baby_Archer:
						case Job_Archer:
							set @job_opt[0], Job_Hunter;
							if(Sex == 0)
								set @job_opt[1], Job_Dancer;
							else
								set @job_opt[1], Job_Bard;
							break;
						case Job_Acolyte_High:
						case Job_Baby_Acolyte:
						case Job_Acolyte:
							set @job_opt[0], Job_Priest;
							set @job_opt[1], Job_Monk;
							break;
						case Job_Merchant_High:
						case Job_Baby_Merchant:
						case Job_Merchant:
							set @job_opt[0], Job_Blacksmith;
							set @job_opt[1], Job_Alchemist;
							break;
						case Job_Thief_High:
						case Job_Baby_Thief:
						case Job_Thief:
							set @job_opt[0], Job_Assassin;
							set @job_opt[1], Job_Rogue;
							break;						
						default:
							set @job_opt[0], Job_Star_Gladiator;
							set @job_opt[1], Job_Soul_Linker;
							break;
					}
					mes "Bienvenido, por favor seleccione el Job al que desea cambiar";
					set @target_job, @job_opt[select(JobName(@job_opt[0]), JobName(@job_opt[1]))-1];
					if(Class > Job_Novice_High && Class < Job_Lord_Knight) set @target_job, @target_job + 4001;
				}
				mes "¿Estás seguro de que desea cambiar a" + JobName(@target_job) + "?";
				if(select("No","Yes")==2){
					callfunc "Job_Change", @target_job;
					if(@target_job == Job_Star_Gladiator || @target_job == Job_Soul_Linker) {
						callfunc "F_ClearJobVar";
					} else {
						if($@JC_Plat) goto L_GivePlat;
					}
				}
				close;
			}
			if(checkfalcon() || checkcart() || checkriding()) goto L_remove;
			if((Class >=Job_Knight) && (Class <=Job_Crusader2)){
				mes "Quieres Renacer?";
				if(select("Reborn")==1){
					if(BaseLevel < 99 || JobLevel < 50) goto L_cantCh;
					set lastJob, Class;
					if(Class == Job_Knight2){
						set lastJob, Job_Knight;
					} else {
						if(Class == Job_Crusader2){
							set lastJob, Job_Crusader;
						}
					}
					jobchange Job_Novice_High;
					resetlvl(1);
					skill 142,1,0;
					skill 143,1,0;
					close;
				}
				switch(Class){
					case Job_Knight:
						set @target_job, 4054;
						break;
					case Job_Priest:
						set @target_job, 4057;
						break;
					case Job_Blacksmith:
						set @target_job, 4058;
						break;
					case Job_Assassin:
						set @target_job, 4059;
						break;
					case Job_Wizard:
						set @target_job, 4055;
						break;
					case Job_Hunter:
						set @target_job, 4056;
						break;
							}
			mes "¿Estás seguro de que desea cambiar a" + JobName(@target_job) + "?";
				if(select("No","Yes")==2){
				if(BaseLevel < 99 || JobLevel < 50) goto L_cantCh;
				callfunc "Job_Change", @target_job;
						}
				close;
			}
	mes "Lo siento, no hay más Clases para su Job.";
	close;
	}

L_Third:
	if(checkfalcon() || checkcart() || checkriding()) goto L_remove;
	mes "¿Estás seguro de que desea cambiar a la Clase 3?";
	if(select("Yes","No")==1){
		if(BaseLevel < 99 || JobLevel < 70) goto L_cantCh;
	switch(Class){
		case Job_Lord_Knight:
		next;
		mes "[Job Master]";
		mes "Necesitare que me Traigas estos Items o no podras Cambiar";
		mes "100 Skull";
		mes "50 red Feather";
		mes "50 blue Fheater";
		mes "500,000 Zeny";		
			set @target_job, 4060;
		next;
		mes "[Job Master]";
		mes "Necesitare que me Traigas estos Items o no podras Cambiar";
		mes "100 Skull";
		mes "50 red Feather";
		mes "50 blue Fheater";
		mes "500,000 Zeny";
			break;
		case Job_High_Priest:
		next;
		mes "[Job Master]";
		mes "Necesitare que me Traigas estos Items o no podras Cambiar";
		mes "100 Skull";
		mes "50 red Feather";
		mes "50 blue Fheater";
		mes "500,000 Zeny";
			set @target_job, 4063;
			break;
		case Job_Whitesmith:
		next;
		mes "[Job Master]";
		mes "Necesitare que me Traigas estos Items o no podras Cambiar";
		mes "100 Skull";
		mes "50 red Feather";
		mes "50 blue Fheater";
		mes "500,000 Zeny";
			set @target_job, 4064;
			break;
		case Job_Assassin_Cross:
		next;
		mes "[Job Master]";
		mes "Necesitare que me Traigas estos Items o no podras Cambiar";
		mes "100 Skull";
		mes "50 red Feather";
		mes "50 blue Fheater";
		mes "500,000 Zeny";
			set @target_job, 4065;
		next;
		mes "[Job Master]";
		mes "Necesitare que me Traigas estos Items o no podras Cambiar";
		mes "100 Skull";
		mes "50 red Feather";
		mes "50 blue Fheater";
		mes "500,000 Zeny";
			break;
		case Job_High_Wizard:
		next;
		mes "[Job Master]";
		mes "Necesitare que me Traigas estos Items o no podras Cambiar";
		mes "100 Skull";
		mes "50 red Feather";
		mes "50 blue Fheater";
		mes "500,000 Zeny";
			set @target_job, 4061;
			break;
		case Job_Sniper:
		next;
		mes "[Job Master]";
		mes "Necesitare que me Traigas estos Items o no podras Cambiar";
		mes "100 Skull";
		mes "50 red Feather";
		mes "50 blue Fheater";
		mes "500,000 Zeny";
			set @target_job, 4062;
			break;
		case Job_Paladin:
		next;
		mes "[Job Master]";
		mes "Necesitare que me Traigas estos Items o no podras Cambiar";
		mes "100 Skull";
		mes "50 red Feather";
		mes "50 blue Fheater";
		mes "500,000 Zeny";
			set @target_job, 4073;
			break;
		case Job_Champion:
		next;
		mes "[Job Master]";
		mes "Necesitare que me Traigas estos Items o no podras Cambiar";
		mes "100 Skull";
		mes "50 red Feather";
		mes "50 blue Fheater";
		mes "500,000 Zeny";
			set @target_job, 4077;
			break;
		case Job_Creator:
		next;
		mes "[Job Master]";
		mes "Necesitare que me Traigas estos Items o no podras Cambiar";
		mes "100 Skull";
		mes "50 red Feather";
		mes "50 blue Fheater";
		mes "500,000 Zeny";
		set @target_job, 4078;
			break;
		case Job_Stalker:
		next;
		mes "[Job Master]";
		mes "Necesitare que me Traigas estos Items o no podras Cambiar";
		mes "100 Skull";
		mes "50 red Feather";
		mes "50 blue Fheater";
		mes "500,000 Zeny";
			set @target_job, 4079;
			break;
		case Job_Professor:
		next;
		mes "[Job Master]";
		mes "Necesitare que me Traigas estos Items o no podras Cambiar";
		mes "100 Skull";
		mes "50 red Feather";
		mes "50 blue Fheater";
		mes "500,000 Zeny";
		set @target_job, 4074;
			break;
		case Job_Clown:
		next;
		mes "[Job Master]";
		mes "Necesitare que me Traigas estos Items o no podras Cambiar";
		mes "100 Skull";
		mes "50 red Feather";
		mes "50 blue Fheater";
		mes "500,000 Zeny";
			set @target_job, 4075;
			break;
		case Job_Gypsy:
			set @target_job, 4076;
		next;
		mes "[Job Master]";
		mes "Necesitare que me Traigas estos Items o no podras Cambiar";
		mes "100 Skull";
		mes "50 red Feather";
		mes "50 blue Fheater";
		mes "500,000 Zeny";
			break;
			}
			next;
			mes "[Job Master]";
			mes "Tienes las Cosas Para que te Cambie el job a " + JobName(@target_job) + "?";
			if(select("No","Yes") == 2){	
						if (countitem(7005)<100)goto falta;
						if (countitem(7440)<50)goto falta;
						if (countitem(7441)<50)goto falta;
						if(Zeny<500000) goto falta;
						set Zeny, Zeny-500000;
						delitem 7005,100;
						delitem 7440,50;
						delitem 7441,50;						
				atcommand "@job "+@target_job;
				atcommand "@allskills";
				specialeffect2 381;
				close;
				}
}
close;


L_GivePlat:
	if (BaseClass==Job_SuperNovice) goto L_sSuperN;
	if (BaseClass==Job_Swordman) goto L_sSword;
	if (BaseClass==Job_Mage) goto L_sMage;
	if (BaseClass==Job_Archer) goto L_sArcher;
	if (BaseClass==Job_Acolyte) goto L_sAcolyte;
	if (BaseClass==Job_Merchant) goto L_sMerchant;
	if (BaseClass==Job_Thief) goto L_sThief;
	if (BaseClass==Job_Knight) goto L_sKnigh;
	if (BaseClass==Job_Crusader) goto L_sCrusader;
	if (BaseClass==Job_Assassin) goto L_sAssassin;
	if (BaseClass==Job_Rogue) goto L_sRogue;
	if (BaseClass==Job_Wizard) goto L_sWizard;
	if (BaseClass==Job_Sage) goto L_sSage;
	if (BaseClass==Job_Hunter) goto L_sHunter;
	if (BaseClass==Job_Bard) goto L_sBard;
	if (BaseClass==Job_Dancer) goto L_sDancer;
	if (BaseClass==Job_BlackSmith) goto L_sBlackSmith;
	if (BaseClass==Job_Priest) goto L_sPriest;
	if (BaseClass==Job_Monk) goto L_sMonk;
	close;
L_sSuperN:
	skill 142,1,0;
	close;
L_sSword:
	skill 142,1,0;
	skill 144,1,0;
	skill 145,1,0;
	skill 146,1,0;
	close;
L_sMage:
	skill 142,1,0;
	skill 157,1,0;
	close;
L_sArcher:
	skill 142,1,0;
	skill 147,1,0;
	skill 148,1,0;
	close;
L_sAcolyte:
	skill 142,1,0;
	skill 156,1,0;
	close;
L_sMerchant:
	skill 142,1,0;
	skill 153,1,0;
	skill 154,1,0;
	skill 155,1,0;
	close;
L_sThief:
	skill 142,1,0;
	skill 149,1,0;
	skill 150,1,0;
	skill 151,1,0;
	skill 152,1,0;
	close;
L_sKnight:
	skill 1001,1,0;
	close;
L_sCrusader:
	skill 1002,1,0;
	close;
L_sAssassin:
	skill 1003,1,0;
	skill 1004,1,0;
	close;
L_sRogue:
	skill 1005,1,0;
	close;
L_sWizard:
	skill 1006,1,0;
	close;
L_sSage:
	skill 1007,1,0;
	close;
L_sHunter:
	skill 1009,1,0;
	close;
L_sBard:
	skill 1010,1,0;
	close;
L_sDancer:
	skill 1011,1,0;
	close;
L_sBlackSmith:
	skill 1012,1,0;
	skill 1013,1,0;
	close;
L_sPriest:
	skill 1014,1,0;
	close;
L_sMonk:
	skill 1015,1,0;
	skill 1016,1,0;
	close;
L_cantCh:
	mes "Lo siento, no cumple con los requisitos para el cambio";
	mes "Por favor, vuelva pronto!";
	close;

L_LvError:
	mes "Lo siento, no tienes suficientes niveles de Job";
	mes "Por favor, vuelva pronto!";
	close;

L_BvError:
	mes "Lo siento, no tienes suficientes niveles de base";
	mes "Por favor, vuelva pronto!";
	close;

L_noReq:
	mes "Lo siento, no cumple con los requisitos para el cambio de Job";
	mes "Por favor, vuelva pronto!";
	close;

L_max:
	mes "Lo siento, no hay más clases para su Job.";
	close;

L_stats:
	mes "Lo siento, por favor, utilizar todos los Subir todos los puntos de skill antes de cambiar de trabajo";
	mes "Por favor, vuelva pronto!";
	close;

L_remove:
	mes "Por favor, retire su carro, el halcón o peco";
	mes "Por favor, vuelva pronto!";
	close;

falta:
	next;
		mes "[Job Master]";
		mes "Te faltan cosas te recordare cuales son las cosas que deves traerme";
		mes "100 Skull";
		mes "50 red Feather";
		mes "50 blue Fheater";
		mes "500,000 Zeny";
		close;
aceptado_n:
	mes "Hola te gustaria evolucionar a kagerou-Oboro?";
	menu "Si",-,"No",NOKAGEROU;
	next;
	mes "Revisare si cumples con los requisitos minimos que es ser nivel 150/70 y no tener puntos de skill";
	next;
	if (Sex == 0) goto oboroM_n;
	if(joblevel<69) goto Job70_n;
	if(baselevel<150) goto BASELVL99_n;
	if(SkillPoint != 0) goto Noskillpt_n;
	mes "Cumples con todos los requisitos para ser un Kagerou asi que procedere a evolucionarte";
	next;
	jobchange 4211;// Kagerou
	specialeffect2 381;
	mes "Listo has evolucionado correctamente";
	close;
	
oboroM_n:
	if(joblevel<69) goto Job70_n;
	if(baselevel<150) goto BASELVL99_n;
	if(SkillPoint != 0) goto Noskillpt_n;
	mes "Cumples con todos los requisitos para ser una Oboro asi que procedere a evolucionarte";
	next;
	jobchange 4212;// Oboro
	specialeffect2 381;
	mes "Listo has evolucionado correctamente";
	close;
	
Job70_n:
	mes " Lo siento no cuentas con el Job suficiente para evolucionar vuelve cuando seas job 70";
	close;
Job70_n1:
	mes " Lo siento no cuentas con el Job suficiente para evolucionar vuelve cuando seas job 70";
	close;
	
BASELVL99_n:
	mes "Lo siento no cuentas con el nivel suficiente para evolucionar vuelve cuando seas 150";
	close;
Noskillpt_n:
	mes " Primero debes gastarte todos tus puntos de skill para poder evolucionar";
	close;
NOKAGEROU:
	mes "Uhh Vuelve cuando quieras evolucionar";
	close;
EXTENDED_1:
	mes "Hola te gustaria evolucionar a Extended Super Novice?";
	menu "Si",-,"No",NOKAGEROU;
	next;
	mes "Revisare si cumples con los requisitos minimos que es ser nivel 150/70 y no tener puntos de skill";
	next;
	if(joblevel<69) goto Job70_n1;
	if(baselevel<150) goto BASELVL99_n;
	if(SkillPoint != 0) goto Noskillpt_n;
	mes "Cumples con todos los requisitos para ser un Extended Super Novice asi que procedere a evolucionarte";
	next;
	jobchange 4190;// extended novice
	specialeffect2 381;
	mes "Listo has evolucionado correctamente";
	close;



OnInit:
	// Variable Setup
	set $@JC_MinimumJB, 40; //Minimum job level for changing between 2nd and advance Class (Default : 40)
	set $@JC_Plat, 1; //Give Platinum skills on Jobchange (Default : 1-yes)
	set $@JC_SupNovM, 45; //Base Level to change into Super Novice (Default : 45)
	end;
}
